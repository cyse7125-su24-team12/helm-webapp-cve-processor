pipeline{
    agent any
        tools {
        nodejs 'Node 20'
    }
    environment {
        GH_TOKEN = credentials('github-pat')
        REPO_NAME = "helm-webapp-cve-processor"
        REPO_OWNER = "cyse7125-su24-team12" // Define the repository owner
    }
    stages{
        stage('Checkout '){
            steps {
            checkout([$class: 'GitSCM',
            branches: [[name: '*/main']],
            extensions: [[$class: 'CleanCheckout']],
            userRemoteConfigs: [[url: 'https://github.com/cyse7125-su24-team12/helm-webapp-cve-processor.git', credentialsId: 'git-credentials-id']]
                ])
            }
        }
        stage('install semantic-release'){
            steps{
                    sh '''
                        npm install -g \
                        semantic-release \
                        @semantic-release/changelog \
                        @semantic-release/github \
                        @semantic-release/commit-analyzer \
                        @semantic-release/release-notes-generator \
                        @semantic-release/exec \
                        sudo apt update 
                        sudo apt install yq -y 
                        ls -a 
                        npm install -g github-release-cli
                    '''
            }
        }
        stage('Semantic Release'){
            steps{
                writeFile file: 'release.config.js', text: '''
                    module.exports = {
                        branches: ['main'],
                        plugins: [
                            '@semantic-release/commit-analyzer',
                            '@semantic-release/release-notes-generator',
                            '@semantic-release/changelog',
                            '@semantic-release/github',
                        ],
                    };
                '''
                sh '''
                cat release.config.js
                npx semantic-release
                '''
            }
        }
    }
        post {
        success {
            echo 'build succeeded!'
        }
        failure {
            echo 'build failed!'
        }
    }
}
